{
  "scopeName": "source.poodle",
  "patterns": [{ "include": "#expression" }],
  "repository": {
    "expression": {
      "patterns": [
        { "include": "#top_arg" },
        { "include": "#top_import" },
        { "include": "#top_mixin_short" },
        { "include": "#top_mixin_long" },
        { "include": "#top_tag" }
      ]
    },
    "top_arg": {
      "match": "^(arg) (\\S+) (\\S+)$",
      "captures": {
        "1": { "name": "keyword.letter" },
        "2": { "name": "variable.parameter" },
        "3": { "name": "entity.name.type" }
      }
    },
    "top_import": {
      "match": "^(import|include) (.*)$",
      "captures": {
        "1": { "name": "keyword.letter" },
        "2": { "name": "string" }
      }
    },
    "top_mixin_short": {
      "match": "^(mixin) +(\\S+)$",
      "captures": {
        "1": { "name": "keyword.letter" },
        "2": { "name": "entity.name.function" }
      }
    },
    "top_mixin_long": {
      "begin": "^(mixin) +(\\S+)\\(",
      "end": "\\)$",
      "beginCaptures": {
        "1": { "name": "keyword.letter" },
        "2": { "name": "entity.name.function" }
      },
      "patterns": [
        {
          "match": "(\\w+) +((\\w|\\.)+)",
          "captures": {
            "1": { "name": "variable.parameter" },
            "2": { "name": "entity.name.type" }
          }
        }
      ]
    },
    "top_tag": {
      "begin": "^\\t*(\\w+)?(([.#]\\w+)*)",
      "end": "\\n",
      "beginCaptures": {
        "1": { "name": "entity.name.tag" },
        "2": { "name": "meta.selector.css entity.other.attribute-name.id.css" }
      },
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "name": "asd",
          "patterns": [
            {
              "begin": "([a-zA-Z0-9_-]+)=",
              "end": "[) ]",
              "beginCaptures": {
                "1": "entity.other.attribute-name.tag"
              }
            }
          ]
        }
      ]
    },

    "tag_attributes": {
      "begin": "(\\(\\s*)",
      "captures": {
        "1": {
          "name": "constant.name.attribute.tag"
        }
      },
      "end": "(\\))",
      "name": "meta.tag.other",
      "patterns": [
        {
          "include": "#tag_attribute_name_paren"
        },
        {
          "include": "#tag_attribute_name"
        },
        {
          "match": "!(?!=)",
          "name": "invalid.illegal.tag"
        },
        {
          "begin": "=\\s*",
          "end": "$|(?=,|(?:\\s+[^!%&*\\-+~|<>?/])|\\))",
          "name": "attribute_value",
          "patterns": [
            {
              "include": "source.go"
            }
          ]
        },
        {
          "begin": "(?<=[%&*\\-+~|<>:?/])\\s+",
          "end": "$|(?=,|(?:\\s+[^!%&*\\-+~|<>?/])|\\))",
          "name": "attribute_value2",
          "patterns": [
            {
              "include": "source.go"
            }
          ]
        }
      ]
    }
  }
}